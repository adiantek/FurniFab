name: Publish application

on:
  release:
    types: ["published"]

env:
  CARGO_TERM_COLOR: always
  TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
  TAURI_KEY_PASSWORD: ""

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Prepare rust (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        uses: dtolnay/rust-toolchain@stable

      - name: Prepare rust (windows only)
        if: matrix.platform == 'windows-latest'
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-pc-windows-msvc

      - name: Prepare rust (macos only)
        if: matrix.platform == 'macos-latest'
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-darwin

      - name: Prepare node.js
        uses: actions/setup-node@v4

      - name: Use cache
        uses: Swatinem/rust-cache@v2

      - name: Install tauri-cli
        run: cargo install tauri-cli

      - name: Install node dependencies
        run: npm ci

      - name: Build binary (unix)
        if: matrix.platform != 'windows-latest'
        run: python3 script/build.py release ${{ github.event.release.tag_name }}

      - name: Build binary (windows)
        if: matrix.platform == 'windows-latest'
        run: python script/build.py release ${{ github.event.release.tag_name }}

#      - name: Build binary (windows arm)
#        if: matrix.platform == 'windows-latest'
#        continue-on-error: true
#        env:
#          PYO3_CROSS: 1
#        run: python3 script/build.py release ${{ github.event.release.tag_name }} aarch64-pc-windows-msvc

      - name: Build binary (macos arm)
        if: matrix.platform == 'macos-latest'
        run: python3 script/build.py release ${{ github.event.release.tag_name }} aarch64-apple-darwin

      - name: Upload artifacts
        if: ${{ github.event_name == 'push' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}
          path: src-tauri/target/release/bundle

      - name: Upload artifacts (macos arm)
        if: ${{ github.event_name == 'push' && matrix.platform == 'macos-latest' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-arm64
          path: src-tauri/target/aarch64-apple-darwin/release/bundle

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-latest
          path: src-tauri/target/release/bundle

      - name: Download macos artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos-latest
          path: src-tauri/target/release/bundle

      - name: Download macos artifacts (arm)
        uses: actions/download-artifact@v4
        with:
          name: macos-latest-arm64
          path: src-tauri/target/aarch64-apple-darwin/release/bundle

      - name: Download ubuntu artifacts
        uses: actions/download-artifact@v4
        with:
          name: ubuntu-latest
          path: src-tauri/target/release/bundle

      - name: Run python script
        run: python3 script/release.py release ${{ github.event.release.tag_name }}

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: release
          target-folder: release
          clean: false
          single-commit: true
