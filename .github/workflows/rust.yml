name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Prepare rust (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        uses: dtolnay/rust-toolchain@stable

      - name: Prepare rust (windows only)
        if: matrix.platform == 'windows-latest'
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-pc-windows-msvc

      - name: Prepare rust (macos only)
        if: matrix.platform == 'macos-latest'
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-darwin

      - name: Prepare node.js
        uses: actions/setup-node@v4

      - name: Use cache
        uses: Swatinem/rust-cache@v2

      - name: Install tauri-cli
        run: cargo install tauri-cli

      - name: Install node dependencies
        run: npm ci

      - name: Build binary
        run: cargo tauri build

      - name: Build binary (windows arm)
        if: matrix.platform == 'windows-latest'
        continue-on-error: true
        env:
          PYO3_CROSS: 1
        run: cargo tauri build --target aarch64-pc-windows-msvc

      - name: Build binary (macos arm)
        if: matrix.platform == 'macos-latest'
        run: cargo tauri build --target aarch64-apple-darwin

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}
          path: src-tauri/target/release/bundle
